# 给你两个整数数组 arr1 ， arr2 和一个整数 d ，请你返回两个数组之间的 距离值 。
# 「距离值」 定义为符合此距离要求的元素数目：对于元素 arr1[i] ，不存在任何元素 arr2[j] 满足 |arr1[i]-arr2[j]| <= d 。
#  
# 示例 1：
# 输入：arr1 = [4,5,8], arr2 = [10,9,1,8], d = 2
# 输出：2
#
# 示例 2：
# 输入：arr1 = [1,4,2,3], arr2 = [-4,-3,6,10,20,30], d = 3
# 输出：2
#
# 示例 3：
# 输入：arr1 = [2,1,100,3], arr2 = [-5,-2,10,-3,7], d = 6
# 输出：1
#  
# 提示：
# 1 <= arr1.length, arr2.length <= 500
# -10^3 <= arr1[i], arr2[j] <= 10^3
# 0 <= d <= 100

class Solution:
    def findTheDistanceValue(self, arr1: list, arr2: list, d: int) -> int:
        res = len(arr1)
        for val1 in arr1:
            for val2 in arr2:
                if abs(val2 - val1) <= d:
                    res -= 1
                    break
        return res
                
    
print(Solution().findTheDistanceValue(arr1 = [4,5,8], arr2 = [10,9,1,8], d = 2))            # 2
print(Solution().findTheDistanceValue(arr1 = [1,4,2,3], arr2 = [-4,-3,6,10,20,30], d = 3))  # 2
print(Solution().findTheDistanceValue(arr1 = [-100, -80,2,1,100,3], arr2 = [-5,-2,10,-3,7], d = 6))   # 3
print(Solution().findTheDistanceValue([-803,715,-224,909,121,-296,872,807,715,407,94,-8,572,90,-520,-867,485,-918,-827,-728,-653,-659,865,102,-564,-452,554,-320,229,36,722,-478,-247,-307,-304,-767,-404,-519,776,933,236,596,954,464],
[817,1,-723,187,128,577,-787,-344,-920,-168,-851,-222,773,614,-699,696,-744,-302,-766,259,203,601,896,-226,-844,168,126,-542,159,-833,950,-454,-253,824,-395,155,94,894,-766,-63,836,-433,-780,611,-907,695,-395,-975,256,373,-971,-813,-154,-765,691,812,617,-919,-616,-510,608,201,-138,-669,-764,-77,-658,394,-506,-675,523,730,-790,-109,865,975,-226,651,987,111,862,675,-398,126,-482,457,-24,-356,-795,-575,335,-350,-919,-945,-979,611],
37))    # 0